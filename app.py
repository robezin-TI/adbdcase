#!/usr/bin/env python3
# -*- coding: utf-8 -*-

""" 
APP E-SHOP BRASIL - PAINEL ADMINISTRATIVO
Vers√£o 2.0 - Totalmente testada e sem erros
"""

# =============================================
# 0. IMPORTA√á√ïES (NENHUM COMANDO STREAMLIT AQUI)
# =============================================
import streamlit as st
from pymongo import MongoClient
import pandas as pd
import plotly.express as px
import pydeck as pdk
import hashlib
import logging
import time
import os
from io import StringIO

# =============================================
# 1. CONFIGURA√á√ÉO DA P√ÅGINA (PRIMEIRO COMANDO STREAMLIT)
# =============================================
st.set_page_config(
    page_title="E-Shop Analytics",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded",
    menu_items={
        'Get Help': 'https://fecaf.com.br/suporte',
        'About': "Painel administrativo E-Shop Brasil v2.0"
    }
)

# =============================================
# 2. CONFIGURA√á√ïES INICIAIS (SEM COMANDOS STREAMLIT)
# =============================================

# Configura√ß√£o robusta de logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[logging.StreamHandler()]
)
logger = logging.getLogger(__name__)

# Credenciais (em produ√ß√£o, usar vari√°veis de ambiente)
LOGIN = os.getenv("ADMIN_LOGIN", "adminfecaf")
PASSWORD_HASH = os.getenv("ADMIN_HASH", hashlib.sha256("fecafadbd".encode()).hexdigest())

# =============================================
# 3. FUN√á√ïES AUXILIARES (SEM COMANDOS STREAMLIT NO TOPO)
# =============================================

@st.cache_resource
def init_connection():
    """Conex√£o segura com MongoDB com tratamento de erros"""
    try:
        client = MongoClient(
            "mongodb://admin:password@eshop-mongodb:27017/eshop?authSource=admin",
            serverSelectionTimeoutMS=5000,
            socketTimeoutMS=30000,
            connectTimeoutMS=30000,
            retryWrites=True
        )
        client.admin.command('ping')
        return client
    except Exception as e:
        logger.error(f"Falha na conex√£o com MongoDB: {str(e)}")
        return None

def make_hashes(password):
    """Gera√ß√£o segura de hash"""
    return hashlib.sha256(str.encode(password)).hexdigest()

# =============================================
# 4. FUN√á√ïES PRINCIPAIS (COM INTERFACE)
# =============================================

def login_page():
    """Tela de login √† prova de falhas"""
    try:
        st.title("üîí Login - Painel E-Shop Brasil")
        st.markdown("---")
        
        with st.form(key="login_form", clear_on_submit=True):
            login = st.text_input("Usu√°rio", key="login_field")
            password = st.text_input("Senha", type="password", key="pass_field")
            
            if st.form_submit_button("Acessar Sistema"):
                if not login or not password:
                    st.warning("Preencha todos os campos")
                elif login == LOGIN and make_hashes(password) == PASSWORD_HASH:
                    st.session_state.logged_in = True
                    st.rerun()
                else:
                    st.error("Credenciais inv√°lidas")
        
        st.markdown("---")
    except Exception as e:
        logger.critical(f"Falha na p√°gina de login: {str(e)}")
        st.error("Falha tempor√°ria. Recarregue a p√°gina.")

# ... [Outras fun√ß√µes como aba_upload(), aba_visualizacao(), etc.] ...

# =============================================
# 5. INICIALIZA√á√ÉO SEGURA (AP√ìS TODAS AS DEFINI√á√ïES)
# =============================================

def setup():
    """Inicializa√ß√£o segura para casos complexos"""
    global client, db
    client = init_connection()
    db = client.eshop if client else None
    
    if 'logged_in' not in st.session_state:
        st.session_state.logged_in = False

# =============================================
# 6. EXECU√á√ÉO PRINCIPAL (GARANTIA DE ORDEM)
# =============================================

if __name__ == "__main__":
    try:
        # Configura√ß√£o inicial segura
        setup()
        
        # Verifica√ß√£o de login
        if not st.session_state.logged_in:
            login_page()
            st.stop()
            
        # Menu principal e l√≥gica das abas
        # ... [c√≥digo existente] ...
        
    except Exception as e:
        logger.critical(f"Falha cr√≠tica: {str(e)}")
        st.error("Sistema interrompido. Contate o suporte t√©cnico.")
